{"version":3,"sources":["markeditor.js"],"names":["setLog","undoLog","length","editor","value","article","body","articleStorage","JSON","stringify","articleSource","localStorage","setItem","timer","setTimeout","inputTitle","document","getElementById","$editor","$","preview","$preview","md","markdownit","highlight","str","lang","hljs","getLanguage","__","$undo","$redo","redoLog","$articleList","articleSpare","title","date","getItem","parse","now","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","innerHTML","render","height","clientHeight","window","resize","on","attr","css","$divs","handleScroll","$other","not","this","off","other","get","percentage","scrollTop","scrollHeight","offsetHeight","addEventListener","find","text","click","push","pop","val","blur","redoTxt","i","articleItem","append","addClass","clearTimeout","event","$target","target","is","confirm","parent","remove","splice","removeClass"],"mappings":"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","file":"../main.min.js","sourcesContent":["// 标题输入区\nvar inputTitle = document.getElementById('input-title');\n// 编辑区\nvar editor = document.getElementById('editor');\nvar $editor = $(editor);\n// 预览区\nvar preview = document.getElementById('preview');\nvar $preview = $(preview);\n// markdown转换对象\nvar md = markdownit({\n    highlight: function(str, lang) {\n        if (lang && hljs.getLanguage(lang)) {\n            try {\n                return hljs.highlight(lang, str).value;\n            } catch (__) {}\n        }\n        return '';\n    }\n});\n// 自动保存定时器\nvar timer;\n// undo redo\nvar $undo = $('.undo');\nvar $redo = $('.redo');\n// undo redo 记录栈\nvar undoLog = [];\nvar redoLog = [];\n// 文章列表\nvar $articleList = $('.article-list');\n// 备用文章\narticleSpare = JSON.stringify([\n        { title: '标题1', body: '这是内容1', date: '2016-5-20 20:41:48' },\n        { title: '标题2', body: '这是内容2', date: '2016-5-20 20:41:49' }]\n);\n// 获取本地存储文章\nvar articleStorage = localStorage.getItem('article') || articleSpare;\nvar articleSource = JSON.parse(articleStorage);\n// 选择最近一次编辑的文章作为当前文章\nvar article = articleSource[articleSource.length - 1];\n// 重新编辑设置日期\nvar now = new Date();\narticle.date = now.getFullYear() + '-' + (now.getMonth() + 1) + '-' + now.getDate() + ' ' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds();\n// 设置标题，编辑区和预览区\ninputTitle.value = article.title;\neditor.value = article.body;\npreview.innerHTML = md.render(editor.value);\n\n\n// 动态设置主区域高度\n$('#main').height(document.body.clientHeight - 60);\n$(window).resize(function() {\n    $('#main').height(document.body.clientHeight - 60);\n});\n\n\n// 实时预览\n$editor.on('input propertychange', function() {\n    preview.innerHTML = md.render(editor.value);\n    // redo不可用 undo可用\n    redoLog = [];\n    $redo.attr('disabled', true).css('background-color', '#555');\n    $undo.attr('disabled', false).css('background-color', '#fcfcfc');\n});\n\n\n// 编辑区和预览区设置同步滚动\nvar $divs = $('#editor, #preview');\nvar handleScroll = function() {\n    // 移除另一个区域的滚动事件 防止循环滚动\n    var $other = $divs.not(this).off('scroll');\n    var other = $other.get(0);\n    var percentage = this.scrollTop / (this.scrollHeight - this.offsetHeight);\n    other.scrollTop = percentage * (other.scrollHeight - other.offsetHeight);\n    // 恢复另一个区域的滚动事件\n    setTimeout(function() {\n        $other.on('scroll', handleScroll);\n    }, 300);\n}\n$divs.on('scroll', handleScroll);\n\n\n// 记录标题变动\ninputTitle.addEventListener('change', function() {\n    // 若输入为空则取日期为标题\n    article.title = inputTitle.value || article.date;\n    $articleList.find('li[alt=\"' + article.date + '\"]').text(article.title);\n    articleStorage = JSON.stringify(articleSource);\n    localStorage.setItem('article', articleStorage);\n});\n\n\n// 隔段时间记录编辑区并自动保存\nfunction setLog() {\n    if (undoLog[undoLog.length - 1] !== editor.value) {\n        undoLog[undoLog.length] = editor.value;\n        article.body = editor.value;\n        articleStorage = JSON.stringify(articleSource);\n        localStorage.setItem('article', articleStorage);\n    }\n    timer = setTimeout(setLog, 1500);\n}\nsetLog();\n\n// undo按钮事件\n$undo.click(function() {\n    redoLog.push(undoLog.pop());\n    $editor.val(undoLog[undoLog.length - 1]).blur();\n    // 当记录栈没有内容时，设置按钮不可用\n    if (!undoLog[undoLog.length - 1]) {\n        $undo.attr('disabled', true).css('background-color', '#555');\n    }\n    $redo.attr('disabled', false).css('background-color', '#fcfcfc');\n    preview.innerHTML = md.render(editor.value);\n    article.body = editor.value;\n    articleStorage = JSON.stringify(articleSource);\n    localStorage.setItem('article', articleStorage);\n});\n\n// redo按钮事件\n$redo.click(function() {\n    var redoTxt = redoLog.pop();\n    undoLog.push(redoTxt);\n    // 当记录栈没有内容时，设置按钮不可用\n    if (!redoLog[redoLog.length - 1]) {\n        $redo.attr('disabled', true).css('background-color', '#555');\n    }\n    $undo.attr('disabled', false).css('background-color', '#fcfcfc');\n    $editor.val(redoTxt).blur();\n    preview.innerHTML = md.render(editor.value);\n    article.body = editor.value;\n    articleStorage = JSON.stringify(articleSource);\n    localStorage.setItem('article', articleStorage);\n});\n\n\n// 语法提示\n$('.show-tips').click(function() {\n    if ($('.tips').css('display') === 'none') {\n        $('.tips').css('display', 'block');\n    } else {\n        $('.tips').css('display', 'none');\n    }\n});\n\n\n// 初始化文章列表\n(function() {\n    for (var i = articleSource.length - 1; i >= 0; i--) {\n        var articleItem = articleSource[i];\n        $articleList.append('<li alt=\"' + articleItem.date + '\" title=\"选择文章\">' + articleItem.title + '<a class=\"delete\" title=\"删除文章\"></a></li>');\n    }\n    $('.article-list li:first-child').addClass('active');\n})();\n\n\n// 显示文章列表\n$('#show-article').click(function() {\n    if ($('.aside').css('left') === '0px') {\n        $('#show-article').css('background-image', 'url(../img/arrow_right.png)');\n        $('.aside').css('left', '-250px');\n        $('#show-article').css('left', '0px');\n        $('.modal').css('display', 'none');\n        $('.wrapper').css('left', '0px');\n        // 重启自动保存\n        setLog();\n    } else {\n        $('#show-article').css('background-image', 'url(../img/arrow_left.png)');\n        $('.aside').css('left', '0px');\n        $('#show-article').css('left', '250px');\n        $('.modal').css('display', 'block');\n        $('.wrapper').css('left', '250px');\n        // 关闭自动保存\n        clearTimeout(timer);\n    }\n});\n\n// 删除和选择文章事件\n$articleList.click(function(event) {\n    var $target = $(event.target);\n    if ($target.is('.delete')) {\n        if (confirm('确定要删除此文章吗?')) {\n            // 根据日期查找文章\n            var date = $target.parent('li').attr('alt');\n            $target.parent('li').remove();\n            for (var i = 0; i < articleSource.length; i++) {\n                if (articleSource[i].date === date) {\n                    articleSource.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    } else if ($target.is('li') && !$target.is('.active')) {\n        // 清除记录栈\n        undoLog = [];\n        redoLog = [];\n        $undo.attr('disabled', true).css('background-color', '#555');\n        $redo.attr('disabled', true).css('background-color', '#555');\n        var date = $target.attr('alt');\n        $('.active').removeClass('active');\n        $target.addClass('active');\n        for (var i = 0; i < articleSource.length; i++) {\n            if (articleSource[i].date === date) {\n                // 将选择的文章放入列表底部\n                article = articleSource[i];\n                articleSource.push(articleSource[i]);\n                articleSource.splice(i, 1);\n                // 重新编辑设置日期\n                var now = new Date();\n                article.date = now.getFullYear() + '-' + (now.getMonth() + 1) + '-' + now.getDate() + ' ' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds();\n                $target.attr('alt', article.date);\n                // 设置标题，编辑区和预览区\n                inputTitle.value = article.title;\n                editor.value = article.body;\n                preview.innerHTML = md.render(editor.value);\n                break;\n            }\n        }\n    }\n    articleStorage = JSON.stringify(articleSource);\n    localStorage.setItem('article', articleStorage);\n});"]}