{"version":3,"sources":["markeditor.js"],"names":["setLog","undoLog","length","editor","value","shift","article","body","articleStorage","JSON","stringify","articleSource","localStorage","setItem","timer","setTimeout","inputTitle","document","getElementById","$editor","$","preview","$preview","md","markdownit","highlight","str","lang","hljs","getLanguage","__","$undo","$redo","redoLog","$showDouble","$showEditor","$showPreview","$articleList","articleSpare","title","date","getItem","parse","now","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","innerHTML","render","height","clientHeight","window","resize","on","attr","css","$divs","handleScroll","$other","not","this","off","other","get","percentage","scrollTop","scrollHeight","offsetHeight","addEventListener","replace","match","find","text","click","clearTimeout","push","removeClass","prepend","children","i","is","pop","val","blur","redoTxt","display","width","articleItem","append","addClass","event","$target","target","confirm","$targetLi","parent","next","prev","remove","splice"],"mappings":"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","file":"../main.min.js","sourcesContent":["/*\n一些初始化\n*/\n\n// 标题输入区\nvar inputTitle = document.getElementById('input-title');\n// 编辑区\nvar editor = document.getElementById('editor');\nvar $editor = $(editor);\n// 预览区\nvar preview = document.getElementById('preview');\nvar $preview = $(preview);\n// 创建markdown转换对象并设置代码高亮\nvar md = markdownit({\n    highlight: function(str, lang) {\n        if (lang && hljs.getLanguage(lang)) {\n            try {\n                return hljs.highlight(lang, str).value;\n            } catch (__) {}\n        }\n        return '';\n    }\n});\n// 自动保存定时器\nvar timer;\n// undo redo按钮\nvar $undo = $('.undo');\nvar $redo = $('.redo');\n// undo redo 记录栈\nvar undoLog = [];\nvar redoLog = [];\n// 区域显示按钮\nvar $showDouble = $('.show-double');\nvar $showEditor = $('.show-editor');\nvar $showPreview = $('.show-preview');\n// 文章列表\nvar $articleList = $('.article-list');\n// 备用文章\narticleSpare = JSON.stringify([\n        { title: '文章1', body: '# 文章1', date: '2016-5-20 20:41:48' },\n        { title: '文章2', body: '# 文章2', date: '2016-5-20 20:41:49' }]\n);\n// 获取本地存储文章\nvar articleStorage = localStorage.getItem('article') || articleSpare;\nvar articleSource = JSON.parse(articleStorage);\n// 选择最近一次编辑的文章作为当前文章\nvar article = articleSource[articleSource.length - 1];\n// 重新编辑设置日期\nvar now = new Date();\narticle.date = now.getFullYear() + '-' + (now.getMonth() + 1) + '-' + now.getDate() + ' ' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds();\n// 设置标题，编辑区和预览区\ninputTitle.value = article.title;\neditor.value = article.body;\npreview.innerHTML = md.render(editor.value);\n\n\n// 动态设置主区域高度\n$('#main').height(document.body.clientHeight - 60);\n$(window).resize(function() {\n    $('#main').height(document.body.clientHeight - 60);\n});\n\n\n// 实时预览\n$editor.on('input propertychange', function() {\n    preview.innerHTML = md.render(editor.value);\n    // redo不可用 undo可用\n    redoLog = [];\n    $redo.attr('disabled', true).css('background-color', '#555');\n    $undo.attr('disabled', false).css('background-color', '#fcfcfc');\n});\n\n\n// 编辑区和预览区设置同步滚动\nvar $divs = $('#editor, #preview');\nvar handleScroll = function() {\n    // 移除另一个区域的滚动事件 防止循环滚动\n    var $other = $divs.not(this).off('scroll');\n    var other = $other.get(0);\n    // 滚动大小按内容百分比计算\n    var percentage = this.scrollTop / (this.scrollHeight - this.offsetHeight);\n    other.scrollTop = percentage * (other.scrollHeight - other.offsetHeight);\n    // 恢复另一个区域的滚动事件\n    setTimeout(function() {\n        $other.on('scroll', handleScroll);\n    }, 300);\n}\n$divs.on('scroll', handleScroll);\n\n\n// 记录标题变动\ninputTitle.addEventListener('change', function() {\n    // 若输入为空则取日期为标题\n    article.title = inputTitle.value || article.date;\n    // XSS输入过滤\n    article.title = article.title.replace(/[<>'&]/g, function(match) {\n            switch (match) {\n                case '<':\n                    return '&lt;';\n                case '>':\n                    return '&gt;';\n                case '&':\n                    return '&amp;';\n                case '\\'':\n                    return '&quot;';\n         }\n     });\n    $articleList.find('li[alt=\"' + article.date + '\"]').text(article.title);\n    articleStorage = JSON.stringify(articleSource);\n    localStorage.setItem('article', articleStorage);\n});\n\n\n// 定时记录编辑区并自动保存\nfunction setLog() {\n    if (undoLog[undoLog.length - 1] !== editor.value) {\n        // 防止存储数据栈过深\n        if (undoLog.length > 50) {\n            undoLog.shift();\n        }\n        undoLog[undoLog.length] = editor.value;\n        article.body = editor.value;\n        articleStorage = JSON.stringify(articleSource);\n        localStorage.setItem('article', articleStorage);\n    }\n    timer = setTimeout(setLog, 800);\n}\nsetLog();\n\n\n/*\n工具栏\n*/\n\n// 新建文章事件\n$('.new-article').click(function() {\n    // 关闭自动保存\n    clearTimeout(timer);\n    // 清除记录栈\n    undoLog = [];\n    redoLog = [];\n    $undo.attr('disabled', true).css('background-color', '#555');\n    $redo.attr('disabled', true).css('background-color', '#555');\n    article = { title: '新建文章', body: '', date: '' };\n    articleSource.push(article);\n    // 设置日期\n    var now = new Date();\n    article.date = now.getFullYear() + '-' + (now.getMonth() + 1) + '-' + now.getDate() + ' ' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds();\n    // 设置标题，编辑区和预览区\n    inputTitle.value = article.title;\n    editor.value = article.body;\n    preview.innerHTML = md.render(editor.value);\n    // 添加到文章列表\n    $('.active').removeClass('active');\n    $articleList.prepend('<li class=\"active\" alt=\"' + article.date + '\" title=\"选择文章\">' + article.title + '<a class=\"delete\" title=\"删除文章\"></a></li>');\n    // 重启自动保存\n    setLog();\n});\n\n// 删除当前文章事件\n$('.del-article').click(function() {\n    var date = article.date;\n    var length = $articleList.children().length;\n    for (var i = 0; i < length; i++) {\n        if ($($articleList.children()[i]).is('.active')) {\n            $($articleList.children()[i]).find('.delete').click();\n        }\n    }\n});\n\n// undo事件\n$undo.click(function() {\n    redoLog.push(undoLog.pop());\n    $editor.val(undoLog[undoLog.length - 1]).blur();\n    // 当记录栈没有内容时，设置按钮不可用\n    if (!undoLog[undoLog.length - 1]) {\n        $undo.attr('disabled', true).css('background-color', '#555');\n    }\n    $redo.attr('disabled', false).css('background-color', '#fcfcfc');\n    preview.innerHTML = md.render(editor.value);\n    article.body = editor.value;\n    articleStorage = JSON.stringify(articleSource);\n    localStorage.setItem('article', articleStorage);\n});\n\n// redo事件\n$redo.click(function() {\n    var redoTxt = redoLog.pop();\n    undoLog.push(redoTxt);\n    // 当记录栈没有内容时，设置按钮不可用\n    if (!redoLog[redoLog.length - 1]) {\n        $redo.attr('disabled', true).css('background-color', '#555');\n    }\n    $undo.attr('disabled', false).css('background-color', '#fcfcfc');\n    $editor.val(redoTxt).blur();\n    preview.innerHTML = md.render(editor.value);\n    article.body = editor.value;\n    articleStorage = JSON.stringify(articleSource);\n    localStorage.setItem('article', articleStorage);\n});\n\n// 双屏显示事件\n$showDouble.click(function() {\n    $editor.css({'display': 'block', 'width': '48%'});\n    $preview.css({'display': 'block', 'width': '52%'});\n    $showDouble.attr('disabled', true).css('background-color', '#555');\n    $showEditor.attr('disabled', false).css('background-color', '#fcfcfc');\n    $showPreview.attr('disabled', false).css('background-color', '#fcfcfc');\n});\n\n// 只显示编辑区事件\n$showEditor.click(function() {\n    $editor.css({'display': 'block', 'width': '100%'});\n    $preview.css({'display': 'none', 'width': '0%'});\n    $showEditor.attr('disabled', true).css('background-color', '#555');\n    $showDouble.attr('disabled', false).css('background-color', '#fcfcfc');\n    $showPreview.attr('disabled', false).css('background-color', '#fcfcfc');\n});\n\n// 只显示预览区事件\n$showPreview.click(function() {\n    $editor.css({'display': 'none', 'width': '0%'});\n    $preview.css({'display': 'block', 'width': '100%'});\n    $showPreview.attr('disabled', true).css('background-color', '#555');\n    $showEditor.attr('disabled', false).css('background-color', '#fcfcfc');\n    $showDouble.attr('disabled', false).css('background-color', '#fcfcfc');\n});\n\n// 语法提示\n$('.show-tips').click(function() {\n    if ($('.tips').css('display') === 'none') {\n        $('.tips').css('display', 'block');\n    } else {\n        $('.tips').css('display', 'none');\n    }\n});\n\n\n/*\n侧边栏\n*/\n\n// 初始化文章列表\n(function() {\n    for (var i = articleSource.length - 1; i >= 0; i--) {\n        var articleItem = articleSource[i];\n        $articleList.append('<li alt=\"' + articleItem.date + '\" title=\"选择文章\">' + articleItem.title + '<a class=\"delete\" title=\"删除文章\"></a></li>');\n    }\n    $('.article-list li:first-child').addClass('active');\n})();\n\n\n// 显示文章列表\n$('#show-article').click(function() {\n    if ($('.aside').css('left') === '0px') {\n        $('#show-article').css('background-image', 'url(../img/arrow_right.png)');\n        $('.aside').css('left', '-250px');\n        $('#show-article').css('left', '0px');\n        $('.modal').css('display', 'none');\n        $('.wrapper').css('left', '0px');\n        // 重启自动保存\n        setLog();\n    } else {\n        $('#show-article').css('background-image', 'url(../img/arrow_left.png)');\n        $('.aside').css('left', '0px');\n        $('#show-article').css('left', '250px');\n        $('.modal').css('display', 'block');\n        $('.wrapper').css('left', '250px');\n        // 关闭自动保存\n        clearTimeout(timer);\n    }\n});\n\n// 删除和选择文章事件\n$articleList.click(function(event) {\n    var $target = $(event.target);\n    if ($target.is('.delete')) {\n        if (confirm('确定要删除此文章吗?')) {\n            // 获取父元素\n            var $targetLi = $target.parent('li');\n            // 如果删除的是当前编辑文章\n            if ($targetLi.is('.active')) {\n                // 切换到其他文章\n                if ($targetLi.next().is('li')) {\n                    $targetLi.next().click();\n                } else if ($targetLi.prev().is('li')) {\n                    $targetLi.prev().click();\n                } else {\n                    // 若无其他文章则新建\n                    $('.new-article').click();\n                }\n            }\n            // 根据日期查找文章\n            var date = $targetLi.attr('alt');\n            $targetLi.remove();\n            for (var i = 0; i < articleSource.length; i++) {\n                if (articleSource[i].date === date) {\n                    articleSource.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    } else if ($target.is('li') && !$target.is('.active')) {\n        // 清除记录栈\n        undoLog = [];\n        redoLog = [];\n        $undo.attr('disabled', true).css('background-color', '#555');\n        $redo.attr('disabled', true).css('background-color', '#555');\n        var date = $target.attr('alt');\n        $('.active').removeClass('active');\n        $target.addClass('active');\n        for (var i = 0; i < articleSource.length; i++) {\n            if (articleSource[i].date === date) {\n                // 将选择的文章放入列表底部\n                article = articleSource[i];\n                articleSource.push(articleSource[i]);\n                articleSource.splice(i, 1);\n                // 重新编辑设置日期\n                var now = new Date();\n                article.date = now.getFullYear() + '-' + (now.getMonth() + 1) + '-' + now.getDate() + ' ' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds();\n                $target.attr('alt', article.date);\n                // 设置标题，编辑区和预览区\n                inputTitle.value = article.title;\n                editor.value = article.body;\n                preview.innerHTML = md.render(editor.value);\n                break;\n            }\n        }\n    }\n    articleStorage = JSON.stringify(articleSource);\n    localStorage.setItem('article', articleStorage);\n});"]}