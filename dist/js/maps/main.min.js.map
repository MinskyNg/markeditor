{"version":3,"sources":["markeditor.js"],"names":["setLog","undoLog","length","$editor","val","setTimeout","editor","document","getElementById","$","preview","$preview","md","markdownit","highlight","str","lang","hljs","getLanguage","value","__","$undo","$redo","redoLog","height","body","clientHeight","window","resize","innerHTML","render","on","attr","css","$divs","handleScroll","$other","not","this","off","other","get","percentage","scrollTop","scrollHeight","offsetHeight","click","push","pop","blur","redoTxt"],"mappings":"AAiFA,QAAAA,UACAC,QAAAA,QAAAC,OAAA,KAAAC,QAAAC,QACAH,QAAAA,QAAAC,QAAAC,QAAAC,OAEAC,WAAAL,OAAA,KApFA,GAAAM,QAAAC,SAAAC,eAAA,UACAL,QAAAM,EAAAH,QAEAI,QAAAH,SAAAC,eAAA,WACAG,SAAAF,EAAAC,SAEAE,GAAAC,YACAC,UAAA,SAAAC,EAAAC,GACA,GAAAA,GAAAC,KAAAC,YAAAF,GACA,IACA,MAAAC,MAAAH,UAAAE,EAAAD,GAAAI,MACA,MAAAC,IAEA,MAAA,MAIAC,MAAAZ,EAAA,SACAa,MAAAb,EAAA,SAEAR,WACAsB,UAIAd,GAAA,SAAAe,OAAAjB,SAAAkB,KAAAC,aAAA,IACAjB,EAAAkB,QAAAC,OAAA,WACAnB,EAAA,SAAAe,OAAAjB,SAAAkB,KAAAC,aAAA,MAKAhB,QAAAmB,UAAAjB,GAAAkB,OAAAxB,OAAAa,OACAhB,QAAA4B,GAAA,uBAAA,WACArB,QAAAmB,UAAAjB,GAAAkB,OAAAxB,OAAAa,OAEAI,WACAD,MAAAU,KAAA,YAAA,GAAAC,IAAA,mBAAA,QACAZ,MAAAW,KAAA,YAAA,GAAAC,IAAA,mBAAA,YAOA,IAAAC,OAAAzB,EAAA,qBACA0B,aAAA,WAEA,GAAAC,GAAAF,MAAAG,IAAAC,MAAAC,IAAA,UACAC,EAAAJ,EAAAK,IAAA,GACAC,EAAAJ,KAAAK,WAAAL,KAAAM,aAAAN,KAAAO,aACAL,GAAAG,UAAAD,GAAAF,EAAAI,aAAAJ,EAAAK,cAEAxC,WAAA,WACA+B,EAAAL,GAAA,SAAAI,eACA,KAEAD,OAAAH,GAAA,SAAAI,cAMA1B,EAAA,iBAAAqC,MAAA,WACA,QAAArC,EAAA,UAAAwB,IAAA,SACAxB,EAAA,iBAAAwB,IAAA,mBAAA,+BACAxB,EAAA,UAAAwB,IAAA,OAAA,UACAxB,EAAA,UAAAwB,IAAA,UAAA,QACAxB,EAAA,YAAAwB,IAAA,OAAA,SAEAxB,EAAA,iBAAAwB,IAAA,mBAAA,8BACAxB,EAAA,UAAAwB,IAAA,OAAA,OACAxB,EAAA,UAAAwB,IAAA,UAAA,SACAxB,EAAA,YAAAwB,IAAA,OAAA,YAaAjC,SAGAqB,MAAAyB,MAAA,WACAvB,QAAAwB,KAAA9C,QAAA+C,OACA7C,QAAAC,IAAAH,QAAAA,QAAAC,OAAA,IAAA+C,OAEAhD,QAAAA,QAAAC,OAAA,IACAmB,MAAAW,KAAA,YAAA,GAAAC,IAAA,mBAAA,QAEAX,MAAAU,KAAA,YAAA,GAAAC,IAAA,mBAAA,WACAvB,QAAAmB,UAAAjB,GAAAkB,OAAAxB,OAAAa,SAIAG,MAAAwB,MAAA,WACA,GAAAI,GAAA3B,QAAAyB,KACA/C,SAAA8C,KAAAG,GAEA3B,QAAAA,QAAArB,OAAA,IACAoB,MAAAU,KAAA,YAAA,GAAAC,IAAA,mBAAA,QAEAZ,MAAAW,KAAA,YAAA,GAAAC,IAAA,mBAAA,WACA9B,QAAAC,IAAA8C,GAAAD,OACAvC,QAAAmB,UAAAjB,GAAAkB,OAAAxB,OAAAa","file":"../main.min.js","sourcesContent":["// 编辑区\nvar editor = document.getElementById('editor');\nvar $editor = $(editor);\n// 预览区\nvar preview = document.getElementById('preview');\nvar $preview = $(preview);\n// markdown转换对象\nvar md = markdownit({\n    highlight: function(str, lang) {\n        if (lang && hljs.getLanguage(lang)) {\n            try {\n                return hljs.highlight(lang, str).value;\n            } catch (__) {}\n        }\n        return '';\n    }\n});\n// undo redo 对象\nvar $undo = $('#undo');\nvar $redo = $('#redo');\n    // undo redo 记录栈\nvar undoLog = [];\nvar redoLog = [];\n\n\n// 动态设置主区域高度\n$('#main').height(document.body.clientHeight - 60);\n$(window).resize(function() {\n    $('#main').height(document.body.clientHeight - 60);\n});\n\n\n// 实时预览\npreview.innerHTML = md.render(editor.value);\n$editor.on('input propertychange', function() {\n    preview.innerHTML = md.render(editor.value);\n    // redo不可用 undo可用\n    redoLog = [];\n    $redo.attr('disabled', true).css('background-color', '#555');\n    $undo.attr('disabled', false).css('background-color', '#fcfcfc');\n});\n\n// 自动保存\n\n\n// 编辑区和预览区设置同步滚动\nvar $divs = $('#editor, #preview');\nvar handleScroll = function() {\n    // 移除另一个区域的滚动事件 防止循环滚动\n    var $other = $divs.not(this).off('scroll'),\n        other = $other.get(0);\n    var percentage = this.scrollTop / (this.scrollHeight - this.offsetHeight);\n    other.scrollTop = percentage * (other.scrollHeight - other.offsetHeight);\n    // 恢复另一个区域的滚动事件\n    setTimeout(function() {\n        $other.on('scroll', handleScroll);\n    }, 200);\n}\n$divs.on('scroll', handleScroll);\n\n\n// 初始化文章列表\n\n// 显示文章列表\n$('#show-article').click(function() {\n    if ($('.aside').css('left') === '0px') {\n        $('#show-article').css('background-image', 'url(../img/arrow_right.png)')\n        $('.aside').css('left', '-200px');\n        $('.modal').css('display', 'none');\n        $('.wrapper').css('left', '0px');\n    } else {\n        $('#show-article').css('background-image', 'url(../img/arrow_left.png)')\n        $('.aside').css('left', '0px');\n        $('.modal').css('display', 'block');\n        $('.wrapper').css('left', '200px');\n    }\n});\n\n\n// undo redo设置\n// 每隔段时间记录编辑区\nfunction setLog() {\n    if (undoLog[undoLog.length - 1] !== $editor.val()) {\n        undoLog[undoLog.length] = $editor.val();\n    }\n    setTimeout(setLog, 1000);\n}\nsetLog();\n\n// undo按钮事件\n$undo.click(function() {\n    redoLog.push(undoLog.pop());\n    $editor.val(undoLog[undoLog.length - 1]).blur();\n    // 当记录栈没有内容时，设置按钮不可用\n    if (!undoLog[undoLog.length - 1]) {\n        $undo.attr('disabled', true).css('background-color', '#555');;\n    }\n    $redo.attr('disabled', false).css('background-color', '#fcfcfc');;\n    preview.innerHTML = md.render(editor.value);\n});\n\n// redo按钮事件\n$redo.click(function() {\n    var redoTxt = redoLog.pop();\n    undoLog.push(redoTxt);\n    // 当记录栈没有内容时，设置按钮不可用\n    if (!redoLog[redoLog.length - 1]) {\n        $redo.attr('disabled', true).css('background-color', '#555');;\n    }\n    $undo.attr('disabled', false).css('background-color', '#fcfcfc');;\n    $editor.val(redoTxt).blur();\n    preview.innerHTML = md.render(editor.value);\n})\n\n// 事件代理"]}